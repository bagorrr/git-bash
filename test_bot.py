import asyncio
from dotenv import load_dotenv
import os
from aiogram import Bot

load_dotenv()

async def test_bot():
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    bot = Bot(token=bot_token)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.username} (ID: {bot_info.id})")
        print(f"üìù –ò–º—è: {bot_info.first_name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
        webhook_info = await bot.get_webhook_info()
        print(f"üîó Webhook URL: {webhook_info.url}")
        
        if webhook_info.url:
            print("‚ö†Ô∏è  Webhook –∞–∫—Ç–∏–≤–µ–Ω! –≠—Ç–æ –º–æ–∂–µ—Ç –º–µ—à–∞—Ç—å polling.")
            # –£–¥–∞–ª—è–µ–º webhook
            await bot.delete_webhook()
            print("‚úÖ Webhook —É–¥–∞–ª–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(test_bot()) 